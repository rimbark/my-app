{"version":3,"file":"static/js/271.4322b011.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAAgE,4BAAhE,EAA+G,kCAA/G,EAAiM,0BAAjM,EAAwO,4BAAxO,EAAmR,8BCAnR,EAA4B,+B,SCU5B,EARoB,SAACA,GACnB,OACE,gBAAKC,UAAWC,EAAY,SACzBF,EAAMG,SAGb,E,UCLMC,EAAU,SAAH,GAAc,SAARC,SAA0BH,EAAqBA,CAAY,EAiB9E,EAfmB,SAAH,GAA4B,IAAvBI,EAAE,EAAFA,GAAIC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KACzBC,EAAO,YAAcH,EAE3B,OACE,iBAAKL,UAAWC,EAAa,WAC3B,0BACE,SAAC,KAAO,CAACQ,GAAID,EAAK,UAAC,gBAAKE,IAAKJ,EAAQK,IAAI,MAAMX,UAAWC,SAE5D,0BACE,SAAC,KAAO,CAACQ,GAAID,EAAMR,UAAWG,EAAQ,SAAEI,QAIhD,E,oBChBO,SAASK,EAAab,GAAQ,IAAD,EAClC,GAQIc,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WARNC,EAAQ,EAARA,SAAS,EAAD,EACRC,UACEC,EAAO,EAAPA,QACAC,EAAM,EAANA,OAEFC,EAAY,EAAZA,aACAC,EAAK,EAALA,MAUF,OACE,0BACE,kBAAMC,SAAUF,GARH,SAACG,GAChBC,QAAQC,IAAIF,GACZvB,EAAM0B,WAAWH,GACjBF,GACF,IAI2C,WACrC,4BAAWL,EAAS,iBAAkB,CACpCW,UAAW,IACXC,UAAW,EACXC,SAAU,mBAEZ,0BAAY,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQW,kBAAkB,2BAAa,OAANX,QAAM,IAANA,GAAsB,QAAhB,EAANA,EAAQW,sBAAc,WAAhB,EAAN,EAAwB3B,UAAW,wBAC1E,kBAAO4B,KAAK,SAASC,UAAWd,QAIxC,CC5BA,IAiBA,EAjBgB,SAAH,GAAyC,IAApCe,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAUR,EAAU,EAAVA,WAC7BS,EAAkBF,EAAQG,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAY7B,KAAM6B,EAAE7B,KAAMD,OAAQ8B,EAAE9B,QAA9B8B,EAAE/B,GAAqC,IAC3FgC,EAAkBJ,EAASE,KAAI,SAAAG,GAAC,OAAI,SAAC,EAAW,CAAYpC,QAASoC,EAAEpC,SAAjBoC,EAAEjC,GAAyB,IAEvF,OACE,iBAAKL,UAAWuC,EAAc,WAC5B,yBACGL,KAEH,iBAAKlC,UAAWuC,EAAmB,UAChCF,GACD,SAACzB,EAAW,CAACa,WAAYA,SAIjC,E,0DCjBMe,EAAiC,SAAAC,GAAK,MAAK,CAAEC,OAAQD,EAAME,YAAYD,OAAQ,ECWrF,GAAeE,E,QAAAA,KAAQC,EAAAA,EAAAA,KARC,SAACJ,GACvB,MAAO,CACLR,SAAUQ,EAAMK,gBAAgBb,SAChCD,QAASS,EAAMK,gBAAgBd,QAC/Be,WAAYN,EAAMK,gBAAgBE,iBAEtC,GAEgD,CAAEvB,WAAAA,EAAAA,MDTlB,SAACwB,GAAe,IACxCC,EAAiB,qGAKpB,OALoB,8BACrB,WACE,OAAKC,KAAKpD,MAAM2C,QAET,SAACO,GAAS,UAAKE,KAAKpD,SADlB,SAAC,KAAQ,CAACU,GAAI,UAEzB,KAAC,EALoB,CAAS2C,EAAAA,WAOhC,OAAOP,EAAAA,EAAAA,IAAQL,EAARK,CAAwCK,EACjD,GCAA,CAAmFG,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/MessageItem.module.css?a146","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/MessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+Y-nC\",\"dialogLink\":\"Dialogs_dialogLink__B4Ul6\",\"activeDialogLink\":\"Dialogs_activeDialogLink__9ejrw\",\"messages\":\"Dialogs_messages__Ts7Kn\",\"avaStyle\":\"Dialogs_avaStyle__l8P-G\",\"dialogView\":\"Dialogs_dialogView__oNDa9\",\"messagesArea\":\"Dialogs_messagesArea__pfaWq\",\"sentMessage\":\"Dialogs_sentMessage__OFRNj\"};","// extracted by mini-css-extract-plugin\nexport default {\"placement\":\"MessageItem_placement__LYfnq\"};","import React from 'react'\r\nimport s from './MessageItem.module.css'\r\n\r\nconst MessageItem = (props) => {\r\n  return (\r\n    <div className={s.placement}>\r\n      {props.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MessageItem\r\n","import React from 'react'\r\nimport s from '../Dialogs.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst setLink = ({ isActive }) => isActive ? s.activeDialogLink : s.dialogLink\r\n\r\nconst DialogItem = ({id, avatar, name}) => {\r\n  const path = '/dialogs/' + id\r\n\r\n  return (\r\n    <div className={s.dialogView}>\r\n      <div>\r\n        <NavLink to={path}><img src={avatar} alt=\"ava\" className={s.avaStyle}/></NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to={path} className={setLink}>{name}</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem\r\n","import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nexport function MessageForm (props) {\r\n  const {\r\n    register,\r\n    formState: {\r\n      isValid,\r\n      errors\r\n    },\r\n    handleSubmit,\r\n    reset\r\n  } = useForm({\r\n    mode: 'onBlur'\r\n  })\r\n  const onSubmit = (data) => {\r\n    console.log(data)\r\n    props.addMessage(data)\r\n    reset()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <input {...register('newMessageBody', {\r\n          maxLength: 300,\r\n          minLength: 1,\r\n          required: 'Empty field'\r\n        })}/>\r\n        <div>{errors?.newMessageBody && <span>{errors?.newMessageBody?.message || 'Check your text!'}</span>}</div>\r\n        <input type=\"submit\" disabled={!isValid}/>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport style from './Dialogs.module.css'\r\nimport MessageItem from './Message/MessageItem'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport { MessageForm } from './Message/MessageForm'\r\n\r\nconst Dialogs = ({dialogs, messages, addMessage}) => {\r\n  const dialogsElements = dialogs.map(d => <DialogItem key={d.id} name={d.name} avatar={d.avatar}/>)\r\n  const messagesElement = messages.map(m => <MessageItem key={m.id} message={m.message}/>)\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messagesArea}>\r\n        {messagesElement}\r\n        <MessageForm addMessage={addMessage}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dialogs\r\n","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToPropsForAuthRedirect = state => ({ isAuth: state.authReducer.isAuth })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render () {\r\n      if (!this.props.isAuth)\r\n        return <Navigate to={'/auth/'}/>\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n  return connect(mapStateToPropsForAuthRedirect)(RedirectComponent)\r\n}\r\n","import React from 'react'\r\nimport { addMessage } from '../../redux/messagesReducer'\r\nimport Dialogs from './Dialogs'\r\nimport { connect } from 'react-redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nconst matStateToProps = (state) => {\r\n  return {\r\n    messages: state.messagesReducer.messages,\r\n    dialogs: state.messagesReducer.dialogs,\r\n    newMessage: state.messagesReducer.newOutputMessage\r\n  }\r\n}\r\n\r\nexport default compose(connect(matStateToProps, { addMessage }), withAuthRedirect)(Dialogs)\r\n"],"names":["props","className","s","message","setLink","isActive","id","avatar","name","path","to","src","alt","MessageForm","useForm","mode","register","formState","isValid","errors","handleSubmit","reset","onSubmit","data","console","log","addMessage","maxLength","minLength","required","newMessageBody","type","disabled","dialogs","messages","dialogsElements","map","d","messagesElement","m","style","mapStateToPropsForAuthRedirect","state","isAuth","authReducer","compose","connect","messagesReducer","newMessage","newOutputMessage","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}